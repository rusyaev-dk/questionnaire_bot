from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove

from tgbot.keyboards.inline.qe_inline_keyboards import qe_list_kb
from tgbot.misc.states import CreatedQeStatistics, PassedQeStatistics, CreateQe
from tgbot.misc.throttling_function import rate_limit
from tgbot.services.database import db_commands


@rate_limit(5)
async def create_questionnaire(message: types.Message):
    await message.answer("üè∑ –í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ</b> –æ–ø—Ä–æ—Å–∞:", reply_markup=ReplyKeyboardRemove())
    await CreateQe.Title.set()


@rate_limit(5)
async def get_user_created_questionnaires(message: types.Message, state: FSMContext):
    created_qes = await db_commands.select_user_created_qes(creator_id=message.from_user.id)

    if len(created_qes) > 0:
        await message.answer("–¢—É—Ç –±—É–¥–µ—Ç –≥–∞–π–¥.", reply_markup=ReplyKeyboardRemove())
        keyboard = await qe_list_kb(questionnaires=created_qes)
        await state.update_data(keyboard=keyboard)
        await message.answer("üîç –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ä–æ—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:",
                             reply_markup=keyboard)
        await CreatedQeStatistics.SelectQE.set()
    else:
        await message.answer("üì≠ –£ –í–∞—Å –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤.")


@rate_limit(5)
async def get_user_passed_questionnaires(message: types.Message, state: FSMContext):
    passed_qes = await db_commands.select_user_passed_qes(respondent_id=message.from_user.id)
    if len(passed_qes) > 0:
        await message.answer("–¢—É—Ç –±—É–¥–µ—Ç –≥–∞–π–¥.", reply_markup=ReplyKeyboardRemove())

        keyboard = await qe_list_kb(questionnaires=passed_qes)
        await state.update_data(keyboard=keyboard)
        await message.answer("üîç –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ä–æ—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
                             reply_markup=keyboard)
        await PassedQeStatistics.SelectQE.set()
    else:
        user = await db_commands.select_user(id=message.from_user.id)
        passed_qe_quantity = user.passed_qe_quantity
        if passed_qe_quantity:
            await message.answer("üöÆ –û–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –í—ã –ø—Ä–æ—Ö–æ–¥–∏–ª–∏, –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∞–≤—Ç–æ—Ä–∞–º–∏.")
        else:
            await message.answer("üì≠ –í—ã –µ—â—ë –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –æ–ø—Ä–æ—Å—ã.")


@rate_limit(5)
async def get_user_statistics(message: types.Message):
    user = await db_commands.select_user(id=message.from_user.id)
    created_qes = await db_commands.select_user_created_qes(creator_id=message.from_user.id)
    total_respondents = 0
    for created_qe in created_qes:
        qe_id = created_qe.qe_id
        questionnaire = await db_commands.select_questionnaire(qe_id=qe_id)
        total_respondents += questionnaire.passed_by

    await message.answer("üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
                         f"‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –æ–ø—Ä–æ—Å–æ–≤: <b>{user.created_qe_quantity}</b>\n"
                         f"‚Ä¢ –ü—Ä–æ–π–¥–µ–Ω–æ –æ–ø—Ä–æ—Å–æ–≤: <b>{user.passed_qe_quantity}</b>\n"
                         f"‚Ä¢ –í—Å–µ–≥–æ –æ–ø—Ä–æ—à–µ–Ω–æ: <b>{total_respondents}</b> —á–µ–ª.\n"
                         f"‚Ä¢ –ü–æ –í–∞—à–∏–º —Å—Å—ã–ª–∫–∞–º –ø–µ—Ä–µ—à–ª–æ: <b>{user.link_clicks}</b> —á–µ–ª.")


@rate_limit(5)
async def get_developer_info(message: types.Message):
    await message.answer("–°–∫–æ—Ä–æ —Ç—É—Ç –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ...")


def register_main_menu(dp: Dispatcher):
    dp.register_message_handler(create_questionnaire, text="üìù –°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å", state="*")
    dp.register_message_handler(get_user_created_questionnaires, text="üóÇ –°–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã", state="*")
    dp.register_message_handler(get_user_passed_questionnaires, text="üóÉ –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã", state="*")
    dp.register_message_handler(get_user_statistics, text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", state="*")
    dp.register_message_handler(get_developer_info, text="üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", state="*")
