from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext

from tgbot.misc.throttling_function import rate_limit


@rate_limit(2)
async def bot_echo_message(message: types.Message, state: FSMContext):
    state = await state.get_state()
    if state == "CreateQe:QuestionType":
        await message.answer("‚¨ÜÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ <b>—Ç–∏–ø</b> –≤–æ–ø—Ä–æ—Å–∞, –≤—ã–±—Ä–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –≤—ã—à–µ.\n"
                             "‚ùå –ß—Ç–æ–±—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ - –Ω–∞–∂–º–∏—Ç–µ <b>/cancel</b>")
    elif state == "PassQe:ClosedAnswer":
        await message.answer("‚¨ÜÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ <b>–≤–∞—Ä–∏–∞–Ω—Ç</b> –æ—Ç–≤–µ—Ç–∞, –≤—ã–±—Ä–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –≤—ã—à–µ.\n"
                             "‚ùå –ß—Ç–æ–±—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ - –Ω–∞–∂–º–∏—Ç–µ <b>/cancel</b>")
    else:
        await message.answer("üòî –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ - –Ω–∞–∂–º–∏—Ç–µ <b>/restart</b>")


@rate_limit(2)
async def bot_echo_callback(call: types.CallbackQuery, state: FSMContext):
    await call.message.answer("üòî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ <b>/restart</b>")


def register_echo(dp: Dispatcher):
    dp.register_message_handler(bot_echo_message, content_types=types.ContentTypes.ANY, state="*")
    dp.register_callback_query_handler(bot_echo_callback, state="*")
